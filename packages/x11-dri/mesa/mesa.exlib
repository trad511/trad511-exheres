# Copyright (c) 2008 Alexander Færøy <eroyf@eroyf.org>
# Copyright 2008, 2009, 2010, 2011 Ingmar Vanhassel
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'mesa-7.0.3.ebuild' which is:
#    Copyright 1999-2008 Gentoo Foundation

MY_PN=Mesa
require alternatives toolchain-funcs easy-multibuild [ $(ever is_scm || echo work=${MY_PN}-${PV}) multiunpack=true ]
require flag-o-matic

export_exlib_phases pkg_pretend src_configure src_install pkg_postinst

OPENGL_DIR="xorg-x11"

SUMMARY="Mesa's OpenGL library"
HOMEPAGE="http://mesa3d.sourceforge.net/"

HOST_URI="ftp://ftp.freedesktop.org/pub/mesa/${PV}/"
DOWNLOADS="${HOST_URI}/${MY_PN}Lib-${PV}.tar.bz2"

# Licences for parts we don't install:
# GLUT: Mark Kilgard's copyright
LICENCES="MIT"
SLOT="0"

MYOPTIONS="
    llvm [[ description = [ Using LLVM as the shader backend for Gallium ] ]]
    opencl [[ description = [ Enable the OpenCL Gallium state tracker ] ]]
    texture-float [[ description = [ Enable floating-point textures and renderbuffers. SGI claims to hold patents on this code. ] ]]
    vdpau [[ description = [ Enable support for VDPAU hardware accelerated video decoding ] ]]
    wayland [[ description = [ Enable the Wayland backend ] ]]
    xorg [[ description = [ Enable building Gallium-based video driver modules for i915, nouveau and radeon ] ]]
    xvmc [[ description = [ Enable support for XvMC hardware accelerated video decoding ] ]]
    (
        multibuild_c:
            32 64
        platform:
            amd64
            x86
        video_drivers:
            (
                i915 [[ description = [ Gallium driver for i915 based Intel GPUs ] ]]
                intel [[ description = [ Driver for i915, i965 and newer ] ]]
            ) [[ number-selected = at-most-one ]]
            gallium-swrast [[ description = [ Gallium based software driver ] ]]
            (
                nouveau [[ description = [ (Gallium) Generally for newer Nvidia cards ] ]]
                nouveau-legacy [[ description = [ Generally for older Nvidia cards ] ]]
            ) [[ number-selected = at-most-one ]]
            radeon [[ description = [ (Gallium) Driver for the Radeon 9500 (r300) and newer ]
                      requires = [ llvm video_drivers: gallium-swrast  ] ]]
            radeon-legacy [[ description = [ Classic driver for cards older than the Radeon 9500 (r300) ] ]]
    )
    llvm? (
        ( video_drivers: gallium-swrast i915 nouveau radeon ) [[ number-selected = at-least-one ]]
    )
    opencl? ( ( video_drivers: i915 nouveau radeon gallium-swrast ) [[ number-selected = at-least-one ]] )
    vdpau? ( ( video_drivers: nouveau radeon gallium-swrast ) [[ number-selected = at-least-one ]] )
    xorg? ( ( video_drivers: i915 nouveau radeon gallium-swrast ) [[ number-selected = at-least-one ]] )
    xvmc? ( ( video_drivers: nouveau radeon gallium-swrast ) [[ number-selected = at-least-one ]] )
"

DRI2PROTO_REQUIRED='[>=2.6]'
GLPROTO_REQUIRED='[>=1.4.14]'
LIBDRM_REQUIRED='[>=2.4.39]'

DEPENDENCIES="
    build:
        dev-lang/python:*[>=2.5&<3]
        dev-libs/libxml2[python]
        virtual/pkg-config
        x11-proto/dri2proto${DRI2PROTO_REQUIRED}
        x11-proto/glproto${GLPROTO_REQUIRED}
        x11-proto/xextproto
        x11-proto/xf86driproto
        x11-proto/xf86vidmodeproto
        x11-utils/makedepend
       !x11-dri/eclectic-opengl
        sys-devel/bison
        sys-devel/flex
        llvm? ( dev-lang/llvm[>=3.1*][multibuild_c:*(-)?] )
        opencl? (
            dev-lang/clang[=3.1*][multibuild_c:*(-)?]
            dev-lang/llvm[=>3.1*][multibuild_c:*(-)?]
            sys-devel/gcc:*[>=4.6]
        )
    build+run:
        dev-libs/expat[multibuild_c:*(-)?]
        sys-apps/systemd[multibuild_c:*(-)?]
        x11-dri/libdrm${LIBDRM_REQUIRED}[multibuild_c:*(-)?]
        x11-libs/libICE[multibuild_c:*(-)?]
        x11-libs/libX11[xcb(+)][multibuild_c:*(-)?]
        x11-libs/libxcb[>=1.8.1][multibuild_c:*(-)?]
        x11-libs/libXdamage[>=1.1.1][multibuild_c:*(-)?]
        x11-libs/libXext[multibuild_c:*(-)?]
        x11-libs/libXxf86vm[multibuild_c:*(-)?]
        vdpau? ( x11-libs/libvdpau[>=0.4.1][multibuild_c:*(-)?] )
        video_drivers:i915? ( x11-dri/libdrm[video_drivers:intel(+)] )
        video_drivers:intel? ( x11-dri/libdrm[video_drivers:intel(+)] )
        video_drivers:nouveau? ( x11-dri/libdrm[>=2.4.34][video_drivers:nouveau(-)] )
        video_drivers:nouveau-legacy? ( x11-dri/libdrm[video_drivers:nouveau(-)] )
        video_drivers:radeon? ( x11-dri/libdrm[video_drivers:radeon(-)] )
        video_drivers:radeon-legacy? ( x11-dri/libdrm[video_drivers:radeon(-)] )
        wayland? ( sys-libs/wayland[>=0.99][multibuild_c:*(-)?] )
        xorg? (
            x11-proto/xextproto[>=7.0.99.1]
            x11-server/xorg-server[>=1.6.0]
        )
        xvmc? (
            x11-libs/libXvMC[>=1.0.6][multibuild_c:*(-)?]
        )
    suggestion:
        x11-dri/mesa-demos
"

if [[ ${PV} != scm ]]; then
    [[ ${DOWNLOADS} != *beta* ]] && UPSTREAM_RELEASE_NOTES="http://mesa3d.sourceforge.net/relnotes-${PV}.html"
fi

WORK=${WORKBASE}

DEFAULT_SRC_TEST_PARAMS=( PTHREAD_LIBS="-lpthread" )

driver_enable() {
    if option ${1}; then
        shift
        DRI_DRIVERS+="${DRI_DRIVERS:+,}$*"
    fi
}

gallium_with() {
    if option ${1}; then
        shift
        GALLIUM_DRIVERS+="${GALLIUM_DRIVERS:+,}$*"
    fi
}

mesa_pkg_pretend() {
    if option opencl; then
        if [[ $(gcc-major-version) -lt 4 || ( $(gcc-major-version) -eq 4 && $(gcc-minor-version) -lt 6 ) ]]; then
            die "Your GCC version is too old. OpenCL support requires GCC 4.6 or later; you have $(gcc-fullversion)"
        fi
    fi
}

mesa_src_configure() {
    local DRI_DRIVERS
    driver_enable !video_drivers:gallium-swrast swrast
    driver_enable video_drivers:intel i915,i965
    driver_enable video_drivers:nouveau-legacy nouveau
    driver_enable video_drivers:radeon-legacy radeon,r200

    # TODO: svga noop
    local GALLIUM_DRIVERS
    gallium_with video_drivers:i915 i915
    gallium_with video_drivers:gallium-swrast swrast
    gallium_with video_drivers:nouveau nouveau
    gallium_with video_drivers:radeon r300,r600,radeonsi

    easy-multibuild_src_configure
}

configure_one_multibuild() {
    LIBDRM_LIBS="$(pkg-config --libs libdrm) -Wl,--rpath-link -Wl,/${LIBDIR}" \

    local egl_platforms=x11

    if option vdpau || option xvmc; then
        MESA_SRC_CONFIGURE_PARAMS+=( --enable-gallium-g3dvl )
    else
        MESA_SRC_CONFIGURE_PARAMS+=( --disable-gallium-g3dvl )
    fi

    if [[ -n "${DRI_DRIVERS}" ]]; then
        MESA_SRC_CONFIGURE_PARAMS+=( --with-dri-drivers=${DRI_DRIVERS} )
    else
        MESA_SRC_CONFIGURE_PARAMS+=( --without-dri-drivers )
    fi

    if [[ -n "${GALLIUM_DRIVERS}" ]]; then
        MESA_SRC_CONFIGURE_PARAMS+=( --with-gallium-drivers=${GALLIUM_DRIVERS} --enable-gallium-egl --enable-openvg )
    else
        MESA_SRC_CONFIGURE_PARAMS+=( --without-gallium-drivers )
    fi

    egl_platforms+=",drm$(option wayland && echo ,wayland)"
    MESA_SRC_CONFIGURE_PARAMS+=( --enable-gbm --enable-shared-glapi $(option_enable opencl) )
    if [[ -n "${GALLIUM_DRIVERS}" ]]; then
        MESA_SRC_CONFIGURE_PARAMS+=( --enable-gallium-gbm )
    fi

    # NOTE(compnerd) disable the assembly dispatching.  The code is absolutely horrid, fragile, and
    # is disabled by other distributions as well (including Fedora and RHEL).  It is also broken
    # with LTO, and is not intended to be fixed.  https://bugs.freedesktop.org/show_bug.cgi?id=55080
    MESA_SRC_CONFIGURE_PARAMS+=(
        --enable-pic
        $($(option platform:x86 || option platform:amd64) && echo --disable-asm)
        --enable-osmesa # off-screen mesa
    )

    # TODO gallium_tests, r600-llvm-compiler
    # TODO egl-platforms: fbdev
    # TODO state trackers: d3d1x(requires same-multibuildiness wine) xa(needs svga)
    # disable va, it's outdated
    econf \
        --with-egl-platforms=${egl_platforms} \
        --enable-dri \
        --enable-glx \
        --enable-gles1 \
        --enable-gles2 \
        --enable-glx-tls \
        --enable-egl \
        --disable-va \
        $(option platform:amd64 && echo "--enable-${MULTIBUILD_TARGET}-bit") \
        $(option_enable llvm gallium-llvm) \
        $(option_enable texture-float) \
        $(option_enable vdpau) \
        $(option_enable xorg) \
        $(option_enable xvmc) \
        "${MESA_SRC_CONFIGURE_PARAMS[@]}"
}

mesa_src_install() {
    dodir /usr

    local alternatives=()

    easy-multibuild_src_install

    alternatives_for opengl X.org 10 ${alternatives[@]}

    edo rm -rf "${IMAGE}"/usr/include/GL/{glew,glxew,wglew}.h

}

install_one_multibuild() {
    default

    # alternatives
    local i

    # get the path of the real libGL.so
    for i in "${IMAGE}"/usr/${LIBDIR}/libGL.so*; do
        if [ -L "${i}" ] ; then
            # clean up the leftover symlinks to libGL
            edo rm "${i}"
        else
            # move libGL so ldconfig isn't confused
            edo mkdir "${IMAGE}"/usr/${LIBDIR}/libGL
            edo mv "${i}" "${IMAGE}"/usr/${LIBDIR}/libGL/libGL-xorg.so
        fi
    done

    # only create .so and .so.1 so ldconfig doesn't replace .so.1 by a direct link to .so.1.2
    alternatives+=(
        /usr/${LIBDIR}/libGL{.so,/libGL-xorg.so}
        /usr/${LIBDIR}/libGL{.so.1,/libGL-xorg.so}
    )
}

mesa_pkg_postinst() {
    # Clean up after old eclectic-opengl module
    if [[ -f ${ROOT}/etc/env.d/03opengl ]] ; then
        rm "${ROOT}/etc/env.d/03opengl" || ewarn "Remove /etc/env.d/03opengl manually"
    fi

    if option vdpau; then
        einfo "In order to use the mesa vdpau driver you need to set the"
        einfo "environment variable VDPAU_DRIVER to your driver when using vdpau"
        einfo "(e.g. 'VDPAU_DRIVER=r600 mplayer -vo vdpau \$file')."
        einfo "Currently only r600, r300 and softpipe (swrast) are supported."
    fi

    alternatives_pkg_postinst
}

